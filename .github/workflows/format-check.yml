name: Code Formatting Verification

on:
  push:
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  build-check:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore ./HelloWorld

      - name: Build
        run: dotnet build ./HelloWorld --no-restore

  format-check:
    runs-on: ubuntu-22.04
    outputs:
      needs-formatting: ${{ steps.format-check.outputs.needs-formatting }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Check code formatting
        id: format-check
        run: |
          echo "Checking code formatting with dotnet format..."
          set +e  # Disable exit on error for this command
          dotnet format ./HelloWorld --verify-no-changes --verbosity diagnostic
          exit_code=$?
          set -e  # Re-enable exit on error

          if [ $exit_code -ne 0 ]; then
            echo "‚ùå Code formatting issues found!"
            echo "needs-formatting=true" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ Code formatting is correct!"
            echo "needs-formatting=false" >> $GITHUB_OUTPUT
          fi

      - name: Fail if formatting needed
        if: steps.format-check.outputs.needs-formatting == 'true'
        run: |
          echo "Code formatting is required. Auto-format job will run if this is a push event."
          exit 1

  auto-format:
    runs-on: ubuntu-22.04
    needs: [format-check]
    if: always() && needs.format-check.outputs.needs-formatting == 'true' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Apply code formatting
        run: |
          echo "Applying code formatting..."
          dotnet format ./HelloWorld --verbosity diagnostic

      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected after formatting"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes after formatting"
          fi

      - name: Create Pull Request
        if: steps.verify-changed-files.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "üîß Fix code formatting issues"
          title: "üîß Auto-fix code formatting"
          body: |
            ## üîß Correction automatique du formatage de code

            Ce PR a √©t√© cr√©√© automatiquement pour corriger les probl√®mes de formatage d√©tect√©s dans le code.

            ### Changements apport√©s
            - Application de `dotnet format` pour corriger les probl√®mes de formatage
            - Mise en conformit√© avec les standards de formatage du projet

            ### Actions effectu√©es
            - ‚úÖ V√©rification du formatage avec `dotnet format --verify-no-changes`
            - ‚úÖ Application des corrections avec `dotnet format`
            - ‚úÖ Cr√©ation automatique de ce PR

            Ce PR peut √™tre merg√© une fois que vous avez v√©rifi√© que les changements sont corrects.
          branch: auto-format-${{ github.sha }}
          delete-branch: true
